-- MySQL Script generated by MySQL Workbench
-- Di 14 Jun 2016 21:44:50 CEST
-- Model: Livingplants    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema jacq_input
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema jacq_input
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `jacq_input` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
-- Schema jacq_log
-- -----------------------------------------------------
-- Note: this schema is auto-filled by the yii ActiveRecordLogableBehavior
-- -----------------------------------------------------
-- Schema herbarinput
-- -----------------------------------------------------
USE `jacq_input` ;

-- -----------------------------------------------------
-- Table `frmwrk_user_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `frmwrk_user_type` ;

CREATE TABLE IF NOT EXISTS `frmwrk_user_type` (
  `user_type_id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `type` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`user_type_id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `frmwrk_employment_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `frmwrk_employment_type` ;

CREATE TABLE IF NOT EXISTS `frmwrk_employment_type` (
  `employment_type_id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `type` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`employment_type_id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `frmwrk_user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `frmwrk_user` ;

CREATE TABLE IF NOT EXISTS `frmwrk_user` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `username` VARCHAR(128) NOT NULL COMMENT '',
  `password` VARCHAR(64) NOT NULL COMMENT 'SHA-256 hash',
  `salt` VARCHAR(64) NOT NULL COMMENT 'random salt',
  `user_type_id` INT NOT NULL COMMENT '',
  `employment_type_id` INT NOT NULL COMMENT '',
  `title_prefix` VARCHAR(45) NULL DEFAULT NULL COMMENT '',
  `firstname` VARCHAR(45) NOT NULL COMMENT '',
  `lastname` VARCHAR(45) NOT NULL COMMENT '',
  `title_suffix` VARCHAR(45) NULL DEFAULT NULL COMMENT '',
  `birthdate` DATE NULL DEFAULT NULL COMMENT '',
  `organisation_id` INT NOT NULL COMMENT '',
  `force_password_change` TINYINT(1) NOT NULL DEFAULT 0 COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_frmwrk_user_frmwrk_user_type1_idx` (`user_type_id` ASC)  COMMENT '',
  INDEX `fk_frmwrk_user_frmwrk_employment_type1_idx` (`employment_type_id` ASC)  COMMENT '',
  INDEX `fk_frmwrk_user_tbl_organisation1_idx` (`organisation_id` ASC)  COMMENT '',
  CONSTRAINT `fk_frmwrk_user_frmwrk_user_type1`
    FOREIGN KEY (`user_type_id`)
    REFERENCES `frmwrk_user_type` (`user_type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_frmwrk_user_frmwrk_employment_type1`
    FOREIGN KEY (`employment_type_id`)
    REFERENCES `frmwrk_employment_type` (`employment_type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_frmwrk_user_tbl_organisation1`
    FOREIGN KEY (`organisation_id`)
    REFERENCES `tbl_organisation` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_organisation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_organisation` ;

CREATE TABLE IF NOT EXISTS `tbl_organisation` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `description` VARCHAR(255) NULL COMMENT '',
  `department` VARCHAR(255) NULL COMMENT '',
  `greenhouse` TINYINT(1) NOT NULL DEFAULT 0 COMMENT '',
  `parent_organisation_id` INT NULL DEFAULT NULL COMMENT '',
  `gardener_id` INT NULL COMMENT '',
  `ipen_code` VARCHAR(5) NULL DEFAULT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_garden_site_id_idx` (`parent_organisation_id` ASC)  COMMENT '',
  INDEX `fk_user_id_idx` (`gardener_id` ASC)  COMMENT '',
  CONSTRAINT `fk_garden_site_id`
    FOREIGN KEY (`parent_organisation_id`)
    REFERENCES `tbl_organisation` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_id`
    FOREIGN KEY (`gardener_id`)
    REFERENCES `frmwrk_user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Table for maintaining garden-places';


-- -----------------------------------------------------
-- Table `tbl_acquisition_date`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_acquisition_date` ;

CREATE TABLE IF NOT EXISTS `tbl_acquisition_date` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `year` VARCHAR(4) NULL COMMENT '',
  `month` VARCHAR(2) NULL COMMENT '',
  `day` VARCHAR(2) NULL COMMENT '',
  `custom` VARCHAR(20) NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB
COMMENT = 'Date table for entering even incomplete information';


-- -----------------------------------------------------
-- Table `tbl_acquisition_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_acquisition_type` ;

CREATE TABLE IF NOT EXISTS `tbl_acquisition_type` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `type` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_location`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_location` ;

CREATE TABLE IF NOT EXISTS `tbl_location` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `location` TEXT NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_location_coordinates`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_location_coordinates` ;

CREATE TABLE IF NOT EXISTS `tbl_location_coordinates` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `altitude_min` INT NULL COMMENT '',
  `altitude_max` INT NULL COMMENT '',
  `exactness` INT NULL COMMENT '',
  `latitude_degrees` INT NULL COMMENT '',
  `latitude_minutes` INT NULL COMMENT '',
  `latitude_seconds` INT NULL COMMENT '',
  `latitude_half` ENUM('N','S') NULL COMMENT '',
  `longitude_degrees` INT NULL COMMENT '',
  `longitude_minutes` INT NULL COMMENT '',
  `longitude_seconds` INT NULL COMMENT '',
  `longitude_half` ENUM('E','W') NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_acquisition_event`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_acquisition_event` ;

CREATE TABLE IF NOT EXISTS `tbl_acquisition_event` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `acquisition_date_id` INT NOT NULL COMMENT '',
  `acquisition_type_id` INT NOT NULL COMMENT '',
  `location_id` INT NULL DEFAULT NULL COMMENT '',
  `number` TEXT NULL COMMENT '',
  `annotation` TEXT NULL COMMENT '',
  `location_coordinates_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_tbl_acquisition_event_tbl_acquisition_date1_idx` (`acquisition_date_id` ASC)  COMMENT '',
  INDEX `fk_tbl_acquisition_event_tbl_acquisition_type1_idx` (`acquisition_type_id` ASC)  COMMENT '',
  INDEX `fk_tbl_acquisition_event_tbl_location1_idx` (`location_id` ASC)  COMMENT '',
  INDEX `fk_tbl_acquisition_event_tbl_location_coordinates_idx` (`location_coordinates_id` ASC)  COMMENT '',
  CONSTRAINT `fk_tbl_acquisition_event_tbl_acquisition_date`
    FOREIGN KEY (`acquisition_date_id`)
    REFERENCES `tbl_acquisition_date` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_acquisition_event_tbl_acquisition_type`
    FOREIGN KEY (`acquisition_type_id`)
    REFERENCES `tbl_acquisition_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_acquisition_event_tbl_location`
    FOREIGN KEY (`location_id`)
    REFERENCES `tbl_location` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_acquisition_event_tbl_location_coordinates`
    FOREIGN KEY (`location_coordinates_id`)
    REFERENCES `tbl_location_coordinates` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_phenology`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_phenology` ;

CREATE TABLE IF NOT EXISTS `tbl_phenology` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `phenology` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  UNIQUE INDEX `phenology_UNIQUE` (`phenology` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_person`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_person` ;

CREATE TABLE IF NOT EXISTS `tbl_person` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(255) NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `name` (`name` ASC)  COMMENT '',
  UNIQUE INDEX `name_UNIQUE` (`name` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_ident_status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_ident_status` ;

CREATE TABLE IF NOT EXISTS `tbl_ident_status` (
  `ident_status_id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `status` VARCHAR(10) NOT NULL COMMENT '',
  PRIMARY KEY (`ident_status_id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_botanical_object`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_botanical_object` ;

CREATE TABLE IF NOT EXISTS `tbl_botanical_object` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `acquisition_event_id` INT NOT NULL COMMENT '',
  `phenology_id` INT NULL COMMENT '',
  `scientific_name_id` INT NOT NULL COMMENT 'Pointer to taxonID in old system',
  `determined_by_id` INT NULL COMMENT '',
  `determination_date` DATE NULL DEFAULT NULL COMMENT '',
  `habitat` VARCHAR(45) NULL COMMENT '',
  `habitus` VARCHAR(45) NULL COMMENT '',
  `annotation` TEXT NULL COMMENT '',
  `recording_date` DATETIME NOT NULL COMMENT '',
  `organisation_id` INT NULL DEFAULT 1 COMMENT '',
  `accessible` TINYINT(1) NOT NULL DEFAULT 0 COMMENT '',
  `redetermine` TINYINT(1) NOT NULL DEFAULT 0 COMMENT '',
  `ident_status_id` INT NULL DEFAULT NULL COMMENT '',
  `separated` TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'indicates if the botanical object does not exist anymore',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_tbl_object_tbl_acquisition_event1_idx` (`acquisition_event_id` ASC)  COMMENT '',
  INDEX `fk_tbl_object_tbl_phenology1_idx` (`phenology_id` ASC)  COMMENT '',
  INDEX `fk_tbl_botanical_object_tbl_person1_idx` (`determined_by_id` ASC)  COMMENT '',
  INDEX `fk_tbl_botanical_object_tbl_garden_site1_idx` (`organisation_id` ASC)  COMMENT '',
  INDEX `fk_tbl_botanical_object_tbl_ident_status1_idx` (`ident_status_id` ASC)  COMMENT '',
  CONSTRAINT `fk_tbl_object_tbl_acquisition_event1`
    FOREIGN KEY (`acquisition_event_id`)
    REFERENCES `tbl_acquisition_event` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_object_tbl_phenology1`
    FOREIGN KEY (`phenology_id`)
    REFERENCES `tbl_phenology` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_botanical_object_tbl_person1`
    FOREIGN KEY (`determined_by_id`)
    REFERENCES `tbl_person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_botanical_object_tbl_garden_site1`
    FOREIGN KEY (`organisation_id`)
    REFERENCES `tbl_organisation` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_botanical_object_tbl_ident_status1`
    FOREIGN KEY (`ident_status_id`)
    REFERENCES `tbl_ident_status` (`ident_status_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_index_seminum_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_index_seminum_type` ;

CREATE TABLE IF NOT EXISTS `tbl_index_seminum_type` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `type` VARCHAR(3) NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_habitus_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_habitus_type` ;

CREATE TABLE IF NOT EXISTS `tbl_habitus_type` (
  `habitus_type_id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `habitus` VARCHAR(255) NOT NULL COMMENT '',
  PRIMARY KEY (`habitus_type_id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_scientific_name_information`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_scientific_name_information` ;

CREATE TABLE IF NOT EXISTS `tbl_scientific_name_information` (
  `scientific_name_id` INT NOT NULL AUTO_INCREMENT COMMENT 'Pointer to taxonID in old system',
  `spatial_distribution` VARCHAR(255) NULL DEFAULT NULL COMMENT '',
  `common_names` VARCHAR(255) NULL DEFAULT NULL COMMENT 'text field for common names relevant to the garden',
  `habitus_type_id` INT NULL DEFAULT NULL COMMENT '',
  PRIMARY KEY (`scientific_name_id`)  COMMENT '',
  INDEX `fk_tbl_scientific_name_information_tbl_habitus_type1_idx` (`habitus_type_id` ASC)  COMMENT '',
  CONSTRAINT `fk_tbl_scientific_name_information_tbl_habitus_type1`
    FOREIGN KEY (`habitus_type_id`)
    REFERENCES `tbl_habitus_type` (`habitus_type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_cultivar`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_cultivar` ;

CREATE TABLE IF NOT EXISTS `tbl_cultivar` (
  `cultivar_id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `scientific_name_id` INT NOT NULL COMMENT '',
  `cultivar` VARCHAR(255) NOT NULL COMMENT '',
  PRIMARY KEY (`cultivar_id`)  COMMENT '',
  INDEX `fk_tbl_cultivar_tbl_scientific_name_information1_idx` (`scientific_name_id` ASC)  COMMENT '',
  CONSTRAINT `fk_tbl_cultivar_tbl_scientific_name_information1`
    FOREIGN KEY (`scientific_name_id`)
    REFERENCES `tbl_scientific_name_information` (`scientific_name_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_living_plant`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_living_plant` ;

CREATE TABLE IF NOT EXISTS `tbl_living_plant` (
  `id` INT NOT NULL COMMENT '',
  `accession_number` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `ipen_number` VARCHAR(20) NULL COMMENT '',
  `ipen_locked` TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'No further editing possible',
  `ipen_type` ENUM('default', 'custom') NOT NULL DEFAULT 'default' COMMENT '',
  `phyto_control` TINYINT(1) NOT NULL DEFAULT 0 COMMENT '',
  `place_number` VARCHAR(20) NULL DEFAULT NULL COMMENT '',
  `index_seminum` TINYINT(1) NOT NULL DEFAULT 0 COMMENT '',
  `culture_notes` TEXT NULL DEFAULT NULL COMMENT '',
  `cultivation_date` DATE NULL DEFAULT NULL COMMENT '',
  `index_seminum_type_id` INT NULL DEFAULT NULL COMMENT '',
  `incoming_date_id` INT NULL DEFAULT NULL COMMENT '',
  `label_synonym_scientific_name_id` INT NULL DEFAULT NULL COMMENT 'pointer to a taxonID for label printing (virtual synonym)',
  `cultivar_id` INT NULL DEFAULT NULL COMMENT '',
  `label_annotation` TEXT NULL DEFAULT NULL COMMENT '',
  `bgci` TINYINT(1) NOT NULL DEFAULT 0 COMMENT '',
  `reviewed` TINYINT(1) NULL DEFAULT 0 COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_tbl_living_plant_tbl_index_seminum_type1_idx` (`index_seminum_type_id` ASC)  COMMENT '',
  INDEX `fk_tbl_living_plant_tbl_acquisition_date1_idx` (`incoming_date_id` ASC)  COMMENT '',
  INDEX `fk_tbl_living_plant_tbl_cultivar1_idx` (`cultivar_id` ASC)  COMMENT '',
  UNIQUE INDEX `accession_number_UNIQUE` (`accession_number` ASC)  COMMENT '',
  INDEX `index_seminum_idx` (`index_seminum` ASC)  COMMENT '',
  CONSTRAINT `fk_livingplant_object1`
    FOREIGN KEY (`id`)
    REFERENCES `tbl_botanical_object` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_tbl_living_plant_tbl_index_seminum_type1`
    FOREIGN KEY (`index_seminum_type_id`)
    REFERENCES `tbl_index_seminum_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_living_plant_tbl_acquisition_date1`
    FOREIGN KEY (`incoming_date_id`)
    REFERENCES `tbl_acquisition_date` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_living_plant_tbl_cultivar1`
    FOREIGN KEY (`cultivar_id`)
    REFERENCES `tbl_cultivar` (`cultivar_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_sex`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_sex` ;

CREATE TABLE IF NOT EXISTS `tbl_sex` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `sex` VARCHAR(30) NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  UNIQUE INDEX `sex_UNIQUE` (`sex` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_botanical_object_sex`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_botanical_object_sex` ;

CREATE TABLE IF NOT EXISTS `tbl_botanical_object_sex` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `sex_id` INT NOT NULL COMMENT '',
  `botanical_object_id` INT NOT NULL COMMENT '',
  INDEX `fk_table1_tbl_sex1_idx` (`sex_id` ASC)  COMMENT '',
  INDEX `fk_table1_tbl_object1_idx` (`botanical_object_id` ASC)  COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  UNIQUE INDEX `object_id_sex_id_UNIQUE` (`sex_id` ASC, `botanical_object_id` ASC)  COMMENT '',
  CONSTRAINT `fk_table1_tbl_sex1`
    FOREIGN KEY (`sex_id`)
    REFERENCES `tbl_sex` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_table1_tbl_object1`
    FOREIGN KEY (`botanical_object_id`)
    REFERENCES `tbl_botanical_object` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_diaspora_bank`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_diaspora_bank` ;

CREATE TABLE IF NOT EXISTS `tbl_diaspora_bank` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_diaspora`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_diaspora` ;

CREATE TABLE IF NOT EXISTS `tbl_diaspora` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `diaspora_bank_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_tbl_diaspora_tbl_diaspora_bank1_idx` (`diaspora_bank_id` ASC)  COMMENT '',
  CONSTRAINT `fk_tbl_diaspora_tbl_object1`
    FOREIGN KEY (`id`)
    REFERENCES `tbl_botanical_object` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_diaspora_tbl_diaspora_bank1`
    FOREIGN KEY (`diaspora_bank_id`)
    REFERENCES `tbl_diaspora_bank` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_separation_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_separation_type` ;

CREATE TABLE IF NOT EXISTS `tbl_separation_type` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `type` VARCHAR(25) NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_separation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_separation` ;

CREATE TABLE IF NOT EXISTS `tbl_separation` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `botanical_object_id` INT NOT NULL COMMENT '',
  `separation_type_id` INT NOT NULL COMMENT '',
  `date` DATE NULL DEFAULT NULL COMMENT '',
  `annotation` TEXT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_tbl_separation_tbl_separation_type1_idx` (`separation_type_id` ASC)  COMMENT '',
  INDEX `fk_tbl_separation_tbl_botanical_object1_idx` (`botanical_object_id` ASC)  COMMENT '',
  CONSTRAINT `fk_tbl_separation_tbl_separation_type1`
    FOREIGN KEY (`separation_type_id`)
    REFERENCES `tbl_separation_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_separation_tbl_botanical_object1`
    FOREIGN KEY (`botanical_object_id`)
    REFERENCES `tbl_botanical_object` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_relevancy_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_relevancy_type` ;

CREATE TABLE IF NOT EXISTS `tbl_relevancy_type` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `type` VARCHAR(25) NULL COMMENT '',
  `important` TINYINT(1) NOT NULL DEFAULT 0 COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_relevancy`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_relevancy` ;

CREATE TABLE IF NOT EXISTS `tbl_relevancy` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `relevancy_type_id` INT NOT NULL COMMENT '',
  `living_plant_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_tbl_relevancy_has_tbl_livingplant_tbl_livingplant1_idx` (`living_plant_id` ASC)  COMMENT '',
  INDEX `fk_tbl_relevancy_has_tbl_livingplant_tbl_relevancy1_idx` (`relevancy_type_id` ASC)  COMMENT '',
  UNIQUE INDEX `livingplant_relevancy_type_id_UNIQUE` (`relevancy_type_id` ASC, `living_plant_id` ASC)  COMMENT '',
  CONSTRAINT `fk_tbl_relevancy_has_tbl_livingplant_tbl_relevancy1`
    FOREIGN KEY (`relevancy_type_id`)
    REFERENCES `tbl_relevancy_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_relevancy_has_tbl_livingplant_tbl_livingplant1`
    FOREIGN KEY (`living_plant_id`)
    REFERENCES `tbl_living_plant` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_tree_record_file`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_tree_record_file` ;

CREATE TABLE IF NOT EXISTS `tbl_tree_record_file` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `year` YEAR NULL COMMENT '',
  `name` VARCHAR(255) NULL COMMENT '',
  `document_number` VARCHAR(20) NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_tree_record_file_page`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_tree_record_file_page` ;

CREATE TABLE IF NOT EXISTS `tbl_tree_record_file_page` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `tree_record_file_id` INT NOT NULL COMMENT '',
  `page` INT NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_tbl_tree_record_file_page_tbl_tree_record_file1_idx` (`tree_record_file_id` ASC)  COMMENT '',
  CONSTRAINT `fk_tbl_tree_record_file_page_tbl_tree_record_file1`
    FOREIGN KEY (`tree_record_file_id`)
    REFERENCES `tbl_tree_record_file` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_living_plant_tree_record_file_page`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_living_plant_tree_record_file_page` ;

CREATE TABLE IF NOT EXISTS `tbl_living_plant_tree_record_file_page` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `living_plant_id` INT NOT NULL COMMENT '',
  `tree_record_file_page_id` INT NOT NULL COMMENT '',
  `corrections_done` TINYINT(1) NOT NULL DEFAULT 0 COMMENT '',
  `corrections_date` DATE NULL DEFAULT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_tbl_tree_record_tbl_tree_record_file_page1_idx` (`tree_record_file_page_id` ASC)  COMMENT '',
  INDEX `fk_tbl_living_plant_tree_record_tbl_living_plant1_idx` (`living_plant_id` ASC)  COMMENT '',
  CONSTRAINT `fk_tbl_tree_record_tbl_tree_record_file_page1`
    FOREIGN KEY (`tree_record_file_page_id`)
    REFERENCES `tbl_tree_record_file_page` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_living_plant_tree_record_tbl_living_plant1`
    FOREIGN KEY (`living_plant_id`)
    REFERENCES `tbl_living_plant` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_sequence`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_sequence` ;

CREATE TABLE IF NOT EXISTS `tbl_sequence` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_alternative_accession_number`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_alternative_accession_number` ;

CREATE TABLE IF NOT EXISTS `tbl_alternative_accession_number` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `living_plant_id` INT NOT NULL COMMENT '',
  `number` VARCHAR(255) NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_tbl_alternative_accession_number_tbl_living_plant1_idx` (`living_plant_id` ASC)  COMMENT '',
  CONSTRAINT `fk_tbl_alternative_accession_number_tbl_living_plant1`
    FOREIGN KEY (`living_plant_id`)
    REFERENCES `tbl_living_plant` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'counter for ipen number';


-- -----------------------------------------------------
-- Table `tbl_location_geonames`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_location_geonames` ;

CREATE TABLE IF NOT EXISTS `tbl_location_geonames` (
  `id` INT NOT NULL COMMENT '',
  `service_data` TEXT NOT NULL COMMENT '',
  `geonameId` INT NOT NULL COMMENT '',
  `countryCode` VARCHAR(2) NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  UNIQUE INDEX `geonameId_UNIQUE` (`geonameId` ASC)  COMMENT '',
  CONSTRAINT `fk_tbl_geonames_location_tbl_location1`
    FOREIGN KEY (`id`)
    REFERENCES `tbl_location` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_acquisition_event_person`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_acquisition_event_person` ;

CREATE TABLE IF NOT EXISTS `tbl_acquisition_event_person` (
  `acquisition_event_id` INT NOT NULL COMMENT '',
  `person_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`acquisition_event_id`, `person_id`)  COMMENT '',
  INDEX `fk_tbl_acquisition_event_person_tbl_person1_idx` (`person_id` ASC)  COMMENT '',
  CONSTRAINT `fk_tbl_acquisition_event_person_tbl_acquisition_event1`
    FOREIGN KEY (`acquisition_event_id`)
    REFERENCES `tbl_acquisition_event` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_acquisition_event_person_tbl_person1`
    FOREIGN KEY (`person_id`)
    REFERENCES `tbl_person` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_certificate_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_certificate_type` ;

CREATE TABLE IF NOT EXISTS `tbl_certificate_type` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `type` VARCHAR(15) NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  UNIQUE INDEX `type_UNIQUE` (`type` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_certificate`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_certificate` ;

CREATE TABLE IF NOT EXISTS `tbl_certificate` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `living_plant_id` INT NOT NULL COMMENT '',
  `certificate_type_id` INT NOT NULL COMMENT '',
  `number` TEXT NULL COMMENT '',
  `annotation` TEXT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_tbl_certificate_tbl_certificate_type1_idx` (`certificate_type_id` ASC)  COMMENT '',
  INDEX `fk_tbl_certificate_tbl_living_plant1_idx` (`living_plant_id` ASC)  COMMENT '',
  CONSTRAINT `fk_tbl_certificate_tbl_certificate_type1`
    FOREIGN KEY (`certificate_type_id`)
    REFERENCES `tbl_certificate_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_certificate_tbl_living_plant1`
    FOREIGN KEY (`living_plant_id`)
    REFERENCES `tbl_living_plant` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `frmwrk_AuthItem`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `frmwrk_AuthItem` ;

CREATE TABLE IF NOT EXISTS `frmwrk_AuthItem` (
  `name` VARCHAR(64) NOT NULL COMMENT '',
  `type` INT(11) NOT NULL COMMENT '',
  `description` TEXT NULL DEFAULT NULL COMMENT '',
  `bizrule` TEXT NULL DEFAULT NULL COMMENT '',
  `data` TEXT NULL DEFAULT NULL COMMENT '',
  PRIMARY KEY (`name`)  COMMENT '')
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `frmwrk_AuthAssignment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `frmwrk_AuthAssignment` ;

CREATE TABLE IF NOT EXISTS `frmwrk_AuthAssignment` (
  `itemname` VARCHAR(64) NOT NULL COMMENT '',
  `userid` INT NOT NULL COMMENT '',
  `bizrule` TEXT NULL DEFAULT NULL COMMENT '',
  `data` TEXT NULL DEFAULT NULL COMMENT '',
  PRIMARY KEY (`itemname`, `userid`)  COMMENT '',
  INDEX `fk_frmwrk_AuthAssignment_frmwrk_user1_idx` (`userid` ASC)  COMMENT '',
  INDEX `itemname` (`itemname` ASC)  COMMENT '',
  CONSTRAINT `fk_frmwrk_AuthAssignment_frmwrk_user1`
    FOREIGN KEY (`userid`)
    REFERENCES `frmwrk_user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `frmwrk_AuthAssignment_ibfk_1`
    FOREIGN KEY (`itemname`)
    REFERENCES `frmwrk_AuthItem` (`name`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `frmwrk_AuthItemChild`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `frmwrk_AuthItemChild` ;

CREATE TABLE IF NOT EXISTS `frmwrk_AuthItemChild` (
  `parent` VARCHAR(64) NOT NULL COMMENT '',
  `child` VARCHAR(64) NOT NULL COMMENT '',
  PRIMARY KEY (`parent`, `child`)  COMMENT '',
  INDEX `child` (`child` ASC)  COMMENT '',
  CONSTRAINT `frmwrk_AuthItemChild_ibfk_1`
    FOREIGN KEY (`parent`)
    REFERENCES `frmwrk_AuthItem` (`name`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `frmwrk_AuthItemChild_ibfk_2`
    FOREIGN KEY (`child`)
    REFERENCES `frmwrk_AuthItem` (`name`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `frmwrk_accessOrganisation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `frmwrk_accessOrganisation` ;

CREATE TABLE IF NOT EXISTS `frmwrk_accessOrganisation` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `AuthItem_name` VARCHAR(64) NULL DEFAULT NULL COMMENT '',
  `user_id` INT NULL DEFAULT NULL COMMENT '',
  `allowDeny` TINYINT(1) NOT NULL DEFAULT 0 COMMENT '0 = deny, 1 = allow',
  `organisation_id` INT NOT NULL DEFAULT 0 COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_frmwrk_AccessOrganisation_frmwrk_AuthItem1_idx` (`AuthItem_name` ASC)  COMMENT '',
  INDEX `fk_frmwrk_AccessOrganisation_frmwrk_user1_idx` (`user_id` ASC)  COMMENT '',
  INDEX `fk_frmwrk_accessOrganisation_tbl_organisation_idx` (`organisation_id` ASC)  COMMENT '',
  UNIQUE INDEX `user_assignment_UNIQUE` (`organisation_id` ASC, `user_id` ASC)  COMMENT '',
  INDEX `group_assignment_UNIQUE` (`organisation_id` ASC, `AuthItem_name` ASC)  COMMENT '',
  CONSTRAINT `fk_frmwrk_AccessOrganisation_frmwrk_AuthItem1`
    FOREIGN KEY (`AuthItem_name`)
    REFERENCES `frmwrk_AuthItem` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_frmwrk_AccessOrganisation_frmwrk_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `frmwrk_user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_frmwrk_accessOrganisation_tbl_organisation`
    FOREIGN KEY (`organisation_id`)
    REFERENCES `tbl_organisation` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'access assignment for organisation level';


-- -----------------------------------------------------
-- Table `frmwrk_accessBotanicalObject`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `frmwrk_accessBotanicalObject` ;

CREATE TABLE IF NOT EXISTS `frmwrk_accessBotanicalObject` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `AuthItem_name` VARCHAR(64) NULL COMMENT '',
  `user_id` INT NULL COMMENT '',
  `allowDeny` TINYINT(1) NOT NULL DEFAULT 0 COMMENT '',
  `botanical_object_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_frmwrk_accessLivingplant_frmwrk_AuthItem1_idx` (`AuthItem_name` ASC)  COMMENT '',
  INDEX `fk_frmwrk_accessLivingplant_frmwrk_user1_idx` (`user_id` ASC)  COMMENT '',
  INDEX `fk_frmwrk_accessLivingplant_tbl_living_plant_idx` (`botanical_object_id` ASC)  COMMENT '',
  UNIQUE INDEX `user_assignment_UNIQUE` (`user_id` ASC, `botanical_object_id` ASC)  COMMENT '',
  UNIQUE INDEX `group_assignment_UNIQUE` (`botanical_object_id` ASC, `AuthItem_name` ASC)  COMMENT '',
  CONSTRAINT `fk_frmwrk_accessLivingplant_frmwrk_AuthItem1`
    FOREIGN KEY (`AuthItem_name`)
    REFERENCES `frmwrk_AuthItem` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_frmwrk_accessLivingplant_frmwrk_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `frmwrk_user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_frmwrk_accessLivingplant_tbl_living_plant`
    FOREIGN KEY (`botanical_object_id`)
    REFERENCES `tbl_living_plant` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_import_properties`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_import_properties` ;

CREATE TABLE IF NOT EXISTS `tbl_import_properties` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `botanical_object_id` INT NOT NULL COMMENT '',
  `IDPflanze` INT NULL COMMENT '',
  `species_name` VARCHAR(255) NULL COMMENT '',
  `Verbreitung` TEXT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `fk_tbl_import_properties_tbl_botanical_object1_idx` (`botanical_object_id` ASC)  COMMENT '',
  CONSTRAINT `fk_tbl_import_properties_tbl_botanical_object1`
    FOREIGN KEY (`botanical_object_id`)
    REFERENCES `tbl_botanical_object` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_import_error`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_import_error` ;

CREATE TABLE IF NOT EXISTS `tbl_import_error` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `IDPflanze` INT NOT NULL COMMENT '',
  `message` TEXT NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_acquisition_source`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_acquisition_source` ;

CREATE TABLE IF NOT EXISTS `tbl_acquisition_source` (
  `acquisition_source_id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(255) NOT NULL COMMENT '',
  PRIMARY KEY (`acquisition_source_id`)  COMMENT '',
  UNIQUE INDEX `name_UNIQUE` (`name` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_acquisition_event_source`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_acquisition_event_source` ;

CREATE TABLE IF NOT EXISTS `tbl_acquisition_event_source` (
  `acquisition_event_source_id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `acquisition_event_id` INT NOT NULL COMMENT '',
  `acquisition_source_id` INT NOT NULL COMMENT '',
  `source_date` DATE NULL DEFAULT NULL COMMENT '',
  INDEX `fk_tbl_acquisition_event_source_tbl_acquisition_event1_idx` (`acquisition_event_id` ASC)  COMMENT '',
  INDEX `fk_tbl_acquisition_event_source_tbl_acquisition_source1_idx` (`acquisition_source_id` ASC)  COMMENT '',
  PRIMARY KEY (`acquisition_event_source_id`)  COMMENT '',
  CONSTRAINT `fk_tbl_acquisition_event_source_tbl_acquisition_event1`
    FOREIGN KEY (`acquisition_event_id`)
    REFERENCES `tbl_acquisition_event` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_acquisition_event_source_tbl_acquisition_source1`
    FOREIGN KEY (`acquisition_source_id`)
    REFERENCES `tbl_acquisition_source` (`acquisition_source_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_label_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_label_type` ;

CREATE TABLE IF NOT EXISTS `tbl_label_type` (
  `label_type_id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `type` VARCHAR(25) NOT NULL COMMENT '',
  PRIMARY KEY (`label_type_id`)  COMMENT '',
  UNIQUE INDEX `type_UNIQUE` (`type` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_botanical_object_label`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_botanical_object_label` ;

CREATE TABLE IF NOT EXISTS `tbl_botanical_object_label` (
  `botanical_object_id` INT NOT NULL COMMENT '',
  `label_type_id` INT NOT NULL COMMENT '',
  INDEX `fk_tbl_botanical_object_label_tbl_botanical_object1_idx` (`botanical_object_id` ASC)  COMMENT '',
  INDEX `fk_tbl_botanical_object_label_tbl_label_type1_idx` (`label_type_id` ASC)  COMMENT '',
  PRIMARY KEY (`botanical_object_id`, `label_type_id`)  COMMENT '',
  CONSTRAINT `fk_tbl_botanical_object_label_tbl_botanical_object1`
    FOREIGN KEY (`botanical_object_id`)
    REFERENCES `tbl_botanical_object` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_botanical_object_label_tbl_label_type1`
    FOREIGN KEY (`label_type_id`)
    REFERENCES `tbl_label_type` (`label_type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_image_server`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_image_server` ;

CREATE TABLE IF NOT EXISTS `tbl_image_server` (
  `organisation_id` INT NOT NULL COMMENT '',
  `base_url` TEXT NOT NULL COMMENT '',
  `key` VARCHAR(50) NOT NULL COMMENT '',
  PRIMARY KEY (`organisation_id`)  COMMENT '',
  CONSTRAINT `fk_tbl_image_server_tbl_organisation1`
    FOREIGN KEY (`organisation_id`)
    REFERENCES `tbl_organisation` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `frmwrk_accessClassification`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `frmwrk_accessClassification` ;

CREATE TABLE IF NOT EXISTS `frmwrk_accessClassification` (
  `access_classification_id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `AuthItem_name` VARCHAR(64) NULL COMMENT '',
  `user_id` INT NULL COMMENT '',
  `allowDeny` TINYINT(1) NOT NULL DEFAULT 0 COMMENT '',
  `tax_syn_ID` INT NOT NULL DEFAULT 0 COMMENT 'reference to synonymy / classification table in legacy system',
  PRIMARY KEY (`access_classification_id`)  COMMENT '',
  INDEX `fk_frmwrk_accessClassification_frmwrk_AuthItem1_idx` (`AuthItem_name` ASC)  COMMENT '',
  INDEX `fk_frmwrk_accessClassification_frmwrk_user1_idx` (`user_id` ASC)  COMMENT '',
  CONSTRAINT `fk_frmwrk_accessClassification_frmwrk_AuthItem1`
    FOREIGN KEY (`AuthItem_name`)
    REFERENCES `frmwrk_AuthItem` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_frmwrk_accessClassification_frmwrk_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `frmwrk_user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `srvc_uuid_minter_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `srvc_uuid_minter_type` ;

CREATE TABLE IF NOT EXISTS `srvc_uuid_minter_type` (
  `uuid_minter_type_id` INT NOT NULL COMMENT '',
  `description` VARCHAR(45) NOT NULL COMMENT '',
  `timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`uuid_minter_type_id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `srvc_uuid_minter`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `srvc_uuid_minter` ;

CREATE TABLE IF NOT EXISTS `srvc_uuid_minter` (
  `uuid_minter_id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `uuid_minter_type_id` INT NOT NULL COMMENT '',
  `internal_id` INT NOT NULL COMMENT '',
  `uuid` VARCHAR(36) NOT NULL COMMENT '',
  `timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`uuid_minter_id`)  COMMENT '',
  INDEX `fk_srvc_uuid_minter_srvc_uuid_minter_type1_idx` (`uuid_minter_type_id` ASC)  COMMENT '',
  UNIQUE INDEX `type_id_internal_id_unique` (`uuid_minter_type_id` ASC, `internal_id` ASC)  COMMENT '',
  CONSTRAINT `fk_srvc_uuid_minter_srvc_uuid_minter_type1`
    FOREIGN KEY (`uuid_minter_type_id`)
    REFERENCES `srvc_uuid_minter_type` (`uuid_minter_type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_index_seminum_revision`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_index_seminum_revision` ;

CREATE TABLE IF NOT EXISTS `tbl_index_seminum_revision` (
  `index_seminum_revision_id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `user_id` INT NOT NULL COMMENT '',
  `name` VARCHAR(50) NOT NULL COMMENT '',
  `timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`index_seminum_revision_id`)  COMMENT '',
  INDEX `fk_tbl_index_seminum_revision_frmwrk_user_idx` (`user_id` ASC)  COMMENT '',
  UNIQUE INDEX `revision_name_UNIQUE` (`name` ASC)  COMMENT '',
  CONSTRAINT `fk_tbl_index_seminum_revision_frmwrk_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `frmwrk_user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_index_seminum_content`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_index_seminum_content` ;

CREATE TABLE IF NOT EXISTS `tbl_index_seminum_content` (
  `index_seminum_content_id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `index_seminum_revision_id` INT NOT NULL COMMENT '',
  `botanical_object_id` INT NOT NULL COMMENT '',
  `accession_number` INT NOT NULL COMMENT '',
  `family` TEXT NOT NULL COMMENT '',
  `scientific_name` TEXT NOT NULL COMMENT '',
  `index_seminum_type` VARCHAR(3) NOT NULL COMMENT '',
  `ipen_number` VARCHAR(28) NOT NULL COMMENT '',
  `acquisition_number` TEXT NULL COMMENT '',
  `acquisition_location` TEXT NULL COMMENT '',
  `habitat` VARCHAR(45) NULL COMMENT '',
  `altitude_min` INT NULL COMMENT '',
  `altitude_max` INT NULL COMMENT '',
  `latitude` VARCHAR(14) NULL COMMENT '',
  `longitude` VARCHAR(14) NULL COMMENT '',
  `acquisition_date` VARCHAR(20) NULL COMMENT '',
  `timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`index_seminum_content_id`)  COMMENT '',
  INDEX `fk_tbl_index_seminum_content_tbl_botanical_object1_idx` (`botanical_object_id` ASC)  COMMENT '',
  INDEX `fk_tbl_index_seminum_content_tbl_index_seminum_revision1_idx` (`index_seminum_revision_id` ASC)  COMMENT '',
  CONSTRAINT `fk_tbl_index_seminum_content_tbl_botanical_object1`
    FOREIGN KEY (`botanical_object_id`)
    REFERENCES `tbl_botanical_object` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_index_seminum_content_tbl_index_seminum_revision1`
    FOREIGN KEY (`index_seminum_revision_id`)
    REFERENCES `tbl_index_seminum_revision` (`index_seminum_revision_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_index_seminum_person`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_index_seminum_person` ;

CREATE TABLE IF NOT EXISTS `tbl_index_seminum_person` (
  `index_seminum_person_id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `index_seminum_content_id` INT NOT NULL COMMENT '',
  `name` VARCHAR(255) NOT NULL COMMENT '',
  `timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`index_seminum_person_id`)  COMMENT '',
  INDEX `fk_tbl_index_seminum_person_tbl_index_seminum_content_idx` (`index_seminum_content_id` ASC)  COMMENT '',
  CONSTRAINT `fk_tbl_index_seminum_person_tbl_index_seminum_content`
    FOREIGN KEY (`index_seminum_content_id`)
    REFERENCES `tbl_index_seminum_content` (`index_seminum_content_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_inventory_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_inventory_type` ;

CREATE TABLE IF NOT EXISTS `tbl_inventory_type` (
  `inventory_type_id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `type` VARCHAR(45) NOT NULL COMMENT '',
  `timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`inventory_type_id`)  COMMENT '',
  UNIQUE INDEX `type_UNIQUE` (`type` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_inventory`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_inventory` ;

CREATE TABLE IF NOT EXISTS `tbl_inventory` (
  `inventory_id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `user_id` INT NOT NULL COMMENT '',
  `inventory_type_id` INT NOT NULL COMMENT '',
  `timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`inventory_id`)  COMMENT '',
  INDEX `fk_tbl_inventory_tbl_inventory_type1_idx` (`inventory_type_id` ASC)  COMMENT '',
  INDEX `fk_tbl_inventory_frmwrk_user1_idx` (`user_id` ASC)  COMMENT '',
  CONSTRAINT `fk_tbl_inventory_tbl_inventory_type1`
    FOREIGN KEY (`inventory_type_id`)
    REFERENCES `tbl_inventory_type` (`inventory_type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_inventory_frmwrk_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `frmwrk_user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tbl_inventory_object`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tbl_inventory_object` ;

CREATE TABLE IF NOT EXISTS `tbl_inventory_object` (
  `inventory_object_id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `inventory_id` INT NOT NULL COMMENT '',
  `botanical_object_id` INT NULL COMMENT '',
  `message` TEXT NOT NULL COMMENT 'Logging message produced by inventory type handler',
  `timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '',
  PRIMARY KEY (`inventory_object_id`)  COMMENT '',
  INDEX `fk_tbl_inventory_object_tbl_inventory1_idx` (`inventory_id` ASC)  COMMENT '',
  INDEX `fk_tbl_inventory_object_tbl_botanical_object1_idx` (`botanical_object_id` ASC)  COMMENT '',
  CONSTRAINT `fk_tbl_inventory_object_tbl_inventory1`
    FOREIGN KEY (`inventory_id`)
    REFERENCES `tbl_inventory` (`inventory_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_inventory_object_tbl_botanical_object1`
    FOREIGN KEY (`botanical_object_id`)
    REFERENCES `tbl_botanical_object` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `frmwrk_config`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `frmwrk_config` ;

CREATE TABLE IF NOT EXISTS `frmwrk_config` (
  `fc_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '',
  `fc_name` VARCHAR(45) NOT NULL COMMENT '',
  `fc_value` TEXT NULL COMMENT '',
  PRIMARY KEY (`fc_id`)  COMMENT '',
  UNIQUE INDEX `fc_name_UNIQUE` (`fc_name` ASC)  COMMENT '')
ENGINE = InnoDB
COMMENT = 'Global config table for holding all configuration values of ' /* comment truncated */ /*the JACQ system.*/;


-- -----------------------------------------------------
-- Table `frmwrk_template`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `frmwrk_template` ;

CREATE TABLE IF NOT EXISTS `frmwrk_template` (
  `ft_id` INT NOT NULL COMMENT '',
  `ft_name` VARCHAR(45) NOT NULL COMMENT '',
  `ft_template` BLOB NOT NULL COMMENT '',
  PRIMARY KEY (`ft_id`)  COMMENT '',
  UNIQUE INDEX `ft_name_UNIQUE` (`ft_name` ASC)  COMMENT '')
ENGINE = InnoDB
COMMENT = 'Generic template table for holding binary template files for' /* comment truncated */ /* processing (e.g. BIRT report layouts).*/;

USE `jacq_input` ;

-- -----------------------------------------------------
-- Placeholder table for view `view_taxon`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `view_taxon` (`taxonID` INT, `synID` INT, `basID` INT, `genID` INT, `annotation` INT, `external` INT, `genus` INT, `DallaTorreIDs` INT, `DallaTorreZusatzIDs` INT, `author_g` INT, `family` INT, `category` INT, `status` INT, `statusID` INT, `rank` INT, `tax_rankID` INT, `rank_abbr` INT, `author` INT, `authorID` INT, `Brummit_Powell_full` INT, `author1` INT, `authorID1` INT, `bpf1` INT, `author2` INT, `authorID2` INT, `bpf2` INT, `author3` INT, `authorID3` INT, `bpf3` INT, `author4` INT, `authorID4` INT, `bpf4` INT, `author5` INT, `authorID5` INT, `bpf5` INT, `epithet` INT, `epithetID` INT, `epithet1` INT, `epithetID1` INT, `epithet2` INT, `epithetID2` INT, `epithet3` INT, `epithetID3` INT, `epithet4` INT, `epithetID4` INT, `epithet5` INT, `epithetID5` INT);

-- -----------------------------------------------------
-- Placeholder table for view `view_person`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `view_person` (`id` INT, `name` INT);

-- -----------------------------------------------------
-- Placeholder table for view `view_scientificName`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `view_scientificName` (`scientific_name_id` INT, `scientific_name` INT, `scientific_name_no_author` INT);

-- -----------------------------------------------------
-- function GetScientificName
-- -----------------------------------------------------

USE `jacq_input`;
DROP function IF EXISTS `GetScientificName`;

DELIMITER $$
USE `jacq_input`$$
CREATE DEFINER=`root`@`localhost` FUNCTION `GetScientificName`(`p_taxonID` INT(11), `p_bAvoidHybridFormula` TINYINT(1) UNSIGNED, `p_bNoAuthor` TINYINT(1) UNSIGNED) RETURNS text CHARSET utf8
    READS SQL DATA
    COMMENT 'mirror function to herbar_view for simplicity'
BEGIN
  DECLARE v_scientificName TEXT;
  DECLARE v_author TEXT;
  
  CALL `herbar_view`._buildScientificNameComponents(p_taxonID, v_scientificName, v_author);
  
  IF p_bNoAuthor = 1 THEN
  	return v_scientificName;
  ELSE
  	return CONCAT_WS(' ', v_scientificName, v_author );
  END IF;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- View `view_taxon`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `view_taxon` ;
DROP TABLE IF EXISTS `view_taxon`;
USE `jacq_input`;
CREATE  OR REPLACE VIEW `view_taxon` AS
    select 
        `ts`.`taxonID` AS `taxonID`,
        `ts`.`synID` AS `synID`,
        `ts`.`basID` AS `basID`,
        `ts`.`genID` AS `genID`,
        `ts`.`annotation` AS `annotation`,
        `ts`.`external` AS `external`,
        `tg`.`genus` AS `genus`,
        `tg`.`DallaTorreIDs` AS `DallaTorreIDs`,
        `tg`.`DallaTorreZusatzIDs` AS `DallaTorreZusatzIDs`,
        `tag`.`author` AS `author_g`,
        `tf`.`family` AS `family`,
        `tsc`.`category` AS `category`,
        `tst`.`status` AS `status`,
        `tst`.`statusID` AS `statusID`,
        `tr`.`rank` AS `rank`,
        `tr`.`tax_rankID` AS `tax_rankID`,
        `tr`.`rank_abbr` AS `rank_abbr`,
        `ta`.`author` AS `author`,
        `ta`.`authorID` AS `authorID`,
        `ta`.`Brummit_Powell_full` AS `Brummit_Powell_full`,
        `ta1`.`author` AS `author1`,
        `ta1`.`authorID` AS `authorID1`,
        `ta1`.`Brummit_Powell_full` AS `bpf1`,
        `ta2`.`author` AS `author2`,
        `ta2`.`authorID` AS `authorID2`,
        `ta2`.`Brummit_Powell_full` AS `bpf2`,
        `ta3`.`author` AS `author3`,
        `ta3`.`authorID` AS `authorID3`,
        `ta3`.`Brummit_Powell_full` AS `bpf3`,
        `ta4`.`author` AS `author4`,
        `ta4`.`authorID` AS `authorID4`,
        `ta4`.`Brummit_Powell_full` AS `bpf4`,
        `ta5`.`author` AS `author5`,
        `ta5`.`authorID` AS `authorID5`,
        `ta5`.`Brummit_Powell_full` AS `bpf5`,
        `te`.`epithet` AS `epithet`,
        `te`.`epithetID` AS `epithetID`,
        `te1`.`epithet` AS `epithet1`,
        `te1`.`epithetID` AS `epithetID1`,
        `te2`.`epithet` AS `epithet2`,
        `te2`.`epithetID` AS `epithetID2`,
        `te3`.`epithet` AS `epithet3`,
        `te3`.`epithetID` AS `epithetID3`,
        `te4`.`epithet` AS `epithet4`,
        `te4`.`epithetID` AS `epithetID4`,
        `te5`.`epithet` AS `epithet5`,
        `te5`.`epithetID` AS `epithetID5`
    from
        ((((((((((((((((((`herbarinput`.`tbl_tax_species` `ts`
        left join `herbarinput`.`tbl_tax_authors` `ta` ON ((`ta`.`authorID` = `ts`.`authorID`)))
        left join `herbarinput`.`tbl_tax_authors` `ta1` ON ((`ta1`.`authorID` = `ts`.`subspecies_authorID`)))
        left join `herbarinput`.`tbl_tax_authors` `ta2` ON ((`ta2`.`authorID` = `ts`.`variety_authorID`)))
        left join `herbarinput`.`tbl_tax_authors` `ta3` ON ((`ta3`.`authorID` = `ts`.`subvariety_authorID`)))
        left join `herbarinput`.`tbl_tax_authors` `ta4` ON ((`ta4`.`authorID` = `ts`.`forma_authorID`)))
        left join `herbarinput`.`tbl_tax_authors` `ta5` ON ((`ta5`.`authorID` = `ts`.`subforma_authorID`)))
        left join `herbarinput`.`tbl_tax_epithets` `te` ON ((`te`.`epithetID` = `ts`.`speciesID`)))
        left join `herbarinput`.`tbl_tax_epithets` `te1` ON ((`te1`.`epithetID` = `ts`.`subspeciesID`)))
        left join `herbarinput`.`tbl_tax_epithets` `te2` ON ((`te2`.`epithetID` = `ts`.`varietyID`)))
        left join `herbarinput`.`tbl_tax_epithets` `te3` ON ((`te3`.`epithetID` = `ts`.`subvarietyID`)))
        left join `herbarinput`.`tbl_tax_epithets` `te4` ON ((`te4`.`epithetID` = `ts`.`formaID`)))
        left join `herbarinput`.`tbl_tax_epithets` `te5` ON ((`te5`.`epithetID` = `ts`.`subformaID`)))
        left join `herbarinput`.`tbl_tax_status` `tst` ON ((`tst`.`statusID` = `ts`.`statusID`)))
        left join `herbarinput`.`tbl_tax_rank` `tr` ON ((`tr`.`tax_rankID` = `ts`.`tax_rankID`)))
        left join `herbarinput`.`tbl_tax_genera` `tg` ON ((`tg`.`genID` = `ts`.`genID`)))
        left join `herbarinput`.`tbl_tax_authors` `tag` ON ((`tag`.`authorID` = `tg`.`authorID`)))
        left join `herbarinput`.`tbl_tax_families` `tf` ON ((`tf`.`familyID` = `tg`.`familyID`)))
        left join `herbarinput`.`tbl_tax_systematic_categories` `tsc` ON ((`tf`.`categoryID` = `tsc`.`categoryID`)));


-- -----------------------------------------------------
-- View `view_person`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `view_person` ;
DROP TABLE IF EXISTS `view_person`;
USE `jacq_input`;
CREATE  OR REPLACE VIEW `view_person` AS
    SELECT 
        `tbl_person`.`id` AS `id`,
        `tbl_person`.`name` AS `name`
    FROM
        `tbl_person` 
    UNION SELECT 
        `herbarinput`.`tbl_collector`.`SammlerID` AS `SammlerID`,
        `herbarinput`.`tbl_collector`.`Sammler` AS `Sammler`
    FROM
        `herbarinput`.`tbl_collector`;

-- -----------------------------------------------------
-- View `view_scientificName`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `view_scientificName` ;
DROP TABLE IF EXISTS `view_scientificName`;
USE `jacq_input`;
CREATE  OR REPLACE VIEW `view_scientificName` AS
    SELECT 
        vt.taxonID AS scientific_name_id,
        GetScientificName(vt.taxonID, 0, 0) AS scientific_name,
        GetScientificName(vt.taxonID, 0, 1) AS scientific_name_no_author
    FROM
        `view_taxon` AS vt

;


-- -----------------------------------------------------
-- Data for table `frmwrk_user_type`
-- -----------------------------------------------------
START TRANSACTION;
USE `jacq_input`;
INSERT INTO `frmwrk_user_type` (`user_type_id`, `type`) VALUES (1, 'gardener');
INSERT INTO `frmwrk_user_type` (`user_type_id`, `type`) VALUES (2, 'scientist');

COMMIT;


-- -----------------------------------------------------
-- Data for table `frmwrk_employment_type`
-- -----------------------------------------------------
START TRANSACTION;
USE `jacq_input`;
INSERT INTO `frmwrk_employment_type` (`employment_type_id`, `type`) VALUES (1, 'fixed');
INSERT INTO `frmwrk_employment_type` (`employment_type_id`, `type`) VALUES (2, 'trainee');
INSERT INTO `frmwrk_employment_type` (`employment_type_id`, `type`) VALUES (3, 'seasonal');
INSERT INTO `frmwrk_employment_type` (`employment_type_id`, `type`) VALUES (4, 'left_company');
INSERT INTO `frmwrk_employment_type` (`employment_type_id`, `type`) VALUES (5, 'doctoral_candidate');
INSERT INTO `frmwrk_employment_type` (`employment_type_id`, `type`) VALUES (6, 'postdoc');
INSERT INTO `frmwrk_employment_type` (`employment_type_id`, `type`) VALUES (7, 'student');

COMMIT;


-- -----------------------------------------------------
-- Data for table `tbl_acquisition_type`
-- -----------------------------------------------------
START TRANSACTION;
USE `jacq_input`;
INSERT INTO `tbl_acquisition_type` (`id`, `type`) VALUES (1, 'unknown');
INSERT INTO `tbl_acquisition_type` (`id`, `type`) VALUES (2, 'full extraction');
INSERT INTO `tbl_acquisition_type` (`id`, `type`) VALUES (3, 'partial extraction');

COMMIT;


-- -----------------------------------------------------
-- Data for table `tbl_phenology`
-- -----------------------------------------------------
START TRANSACTION;
USE `jacq_input`;
INSERT INTO `tbl_phenology` (`id`, `phenology`) VALUES (1, 'unknown');
INSERT INTO `tbl_phenology` (`id`, `phenology`) VALUES (2, 'florid');
INSERT INTO `tbl_phenology` (`id`, `phenology`) VALUES (3, 'foliage');
INSERT INTO `tbl_phenology` (`id`, `phenology`) VALUES (4, 'fruit');
INSERT INTO `tbl_phenology` (`id`, `phenology`) VALUES (5, 'foliage_loss');
INSERT INTO `tbl_phenology` (`id`, `phenology`) VALUES (6, 'reduced');

COMMIT;


-- -----------------------------------------------------
-- Data for table `tbl_ident_status`
-- -----------------------------------------------------
START TRANSACTION;
USE `jacq_input`;
INSERT INTO `tbl_ident_status` (`ident_status_id`, `status`) VALUES (1, 'aff.');
INSERT INTO `tbl_ident_status` (`ident_status_id`, `status`) VALUES (2, 'agg.');
INSERT INTO `tbl_ident_status` (`ident_status_id`, `status`) VALUES (3, 'cf.');
INSERT INTO `tbl_ident_status` (`ident_status_id`, `status`) VALUES (4, 'ined.');
INSERT INTO `tbl_ident_status` (`ident_status_id`, `status`) VALUES (5, 'masc.');
INSERT INTO `tbl_ident_status` (`ident_status_id`, `status`) VALUES (6, 's.l.');
INSERT INTO `tbl_ident_status` (`ident_status_id`, `status`) VALUES (7, 's.str.');
INSERT INTO `tbl_ident_status` (`ident_status_id`, `status`) VALUES (8, 'sp. nov.');
INSERT INTO `tbl_ident_status` (`ident_status_id`, `status`) VALUES (9, 'x');
INSERT INTO `tbl_ident_status` (`ident_status_id`, `status`) VALUES (10, 'fem.');

COMMIT;


-- -----------------------------------------------------
-- Data for table `tbl_index_seminum_type`
-- -----------------------------------------------------
START TRANSACTION;
USE `jacq_input`;
INSERT INTO `tbl_index_seminum_type` (`id`, `type`) VALUES (1, 'WL');
INSERT INTO `tbl_index_seminum_type` (`id`, `type`) VALUES (2, 'KL');
INSERT INTO `tbl_index_seminum_type` (`id`, `type`) VALUES (3, 'WKL');
INSERT INTO `tbl_index_seminum_type` (`id`, `type`) VALUES (4, 'WS');
INSERT INTO `tbl_index_seminum_type` (`id`, `type`) VALUES (5, 'KS');
INSERT INTO `tbl_index_seminum_type` (`id`, `type`) VALUES (6, 'WKS');

COMMIT;


-- -----------------------------------------------------
-- Data for table `tbl_habitus_type`
-- -----------------------------------------------------
START TRANSACTION;
USE `jacq_input`;
INSERT INTO `tbl_habitus_type` (`habitus_type_id`, `habitus`) VALUES (1, 'tree');
INSERT INTO `tbl_habitus_type` (`habitus_type_id`, `habitus`) VALUES (2, 'shrub');
INSERT INTO `tbl_habitus_type` (`habitus_type_id`, `habitus`) VALUES (3, 'herb');
INSERT INTO `tbl_habitus_type` (`habitus_type_id`, `habitus`) VALUES (4, 'Rhizomgeophyt');
INSERT INTO `tbl_habitus_type` (`habitus_type_id`, `habitus`) VALUES (5, 'Zwiebelgeophyt');

COMMIT;


-- -----------------------------------------------------
-- Data for table `tbl_sex`
-- -----------------------------------------------------
START TRANSACTION;
USE `jacq_input`;
INSERT INTO `tbl_sex` (`id`, `sex`) VALUES (1, 'male');
INSERT INTO `tbl_sex` (`id`, `sex`) VALUES (2, 'female');

COMMIT;


-- -----------------------------------------------------
-- Data for table `tbl_separation_type`
-- -----------------------------------------------------
START TRANSACTION;
USE `jacq_input`;
INSERT INTO `tbl_separation_type` (`id`, `type`) VALUES (1, 'dead (spontaneous)');
INSERT INTO `tbl_separation_type` (`id`, `type`) VALUES (2, 'dead (eliminated)');
INSERT INTO `tbl_separation_type` (`id`, `type`) VALUES (3, 'dead (unknown cause)');
INSERT INTO `tbl_separation_type` (`id`, `type`) VALUES (4, 'harvested');
INSERT INTO `tbl_separation_type` (`id`, `type`) VALUES (5, 'separated');
INSERT INTO `tbl_separation_type` (`id`, `type`) VALUES (6, 'herbarium');
INSERT INTO `tbl_separation_type` (`id`, `type`) VALUES (7, 'unknown');
INSERT INTO `tbl_separation_type` (`id`, `type`) VALUES (8, 'pollen');
INSERT INTO `tbl_separation_type` (`id`, `type`) VALUES (9, 'DNA sample');
INSERT INTO `tbl_separation_type` (`id`, `type`) VALUES (10, 'seed');
INSERT INTO `tbl_separation_type` (`id`, `type`) VALUES (11, 'morphological fixation');
INSERT INTO `tbl_separation_type` (`id`, `type`) VALUES (12, 'cytological fixation');
INSERT INTO `tbl_separation_type` (`id`, `type`) VALUES (13, 'plant parts');

COMMIT;


-- -----------------------------------------------------
-- Data for table `tbl_relevancy_type`
-- -----------------------------------------------------
START TRANSACTION;
USE `jacq_input`;
INSERT INTO `tbl_relevancy_type` (`id`, `type`, `important`) VALUES (1, 'sciences', 0);
INSERT INTO `tbl_relevancy_type` (`id`, `type`, `important`) VALUES (2, 'teachings', 0);
INSERT INTO `tbl_relevancy_type` (`id`, `type`, `important`) VALUES (3, 'protection', 0);
INSERT INTO `tbl_relevancy_type` (`id`, `type`, `important`) VALUES (4, 'public', 0);
INSERT INTO `tbl_relevancy_type` (`id`, `type`, `important`) VALUES (5, 'historic', 0);

COMMIT;


-- -----------------------------------------------------
-- Data for table `tbl_sequence`
-- -----------------------------------------------------
START TRANSACTION;
USE `jacq_input`;
INSERT INTO `tbl_sequence` (`id`) VALUES (0);

COMMIT;


-- -----------------------------------------------------
-- Data for table `tbl_certificate_type`
-- -----------------------------------------------------
START TRANSACTION;
USE `jacq_input`;
INSERT INTO `tbl_certificate_type` (`id`, `type`) VALUES (1, 'cites');
INSERT INTO `tbl_certificate_type` (`id`, `type`) VALUES (2, 'phyto');
INSERT INTO `tbl_certificate_type` (`id`, `type`) VALUES (3, 'pic');
INSERT INTO `tbl_certificate_type` (`id`, `type`) VALUES (4, 'abs');
INSERT INTO `tbl_certificate_type` (`id`, `type`) VALUES (5, 'zoll');
INSERT INTO `tbl_certificate_type` (`id`, `type`) VALUES (6, 'ipen');
INSERT INTO `tbl_certificate_type` (`id`, `type`) VALUES (7, 'custom');

COMMIT;


-- -----------------------------------------------------
-- Data for table `tbl_label_type`
-- -----------------------------------------------------
START TRANSACTION;
USE `jacq_input`;
INSERT INTO `tbl_label_type` (`label_type_id`, `type`) VALUES (1, 'exhibition');
INSERT INTO `tbl_label_type` (`label_type_id`, `type`) VALUES (2, 'working');

COMMIT;


-- -----------------------------------------------------
-- Data for table `srvc_uuid_minter_type`
-- -----------------------------------------------------
START TRANSACTION;
USE `jacq_input`;
INSERT INTO `srvc_uuid_minter_type` (`uuid_minter_type_id`, `description`, `timestamp`) VALUES (1, 'scientific_name', NOW());
INSERT INTO `srvc_uuid_minter_type` (`uuid_minter_type_id`, `description`, `timestamp`) VALUES (2, 'citation', NOW());

COMMIT;


-- -----------------------------------------------------
-- Data for table `tbl_inventory_type`
-- -----------------------------------------------------
START TRANSACTION;
USE `jacq_input`;
INSERT INTO `tbl_inventory_type` (`inventory_type_id`, `type`, `timestamp`) VALUES (1, 'inventory', NOW());

COMMIT;


-- -----------------------------------------------------
-- Data for table `frmwrk_config`
-- -----------------------------------------------------
START TRANSACTION;
USE `jacq_input`;
INSERT INTO `frmwrk_config` (`fc_id`, `fc_name`, `fc_value`) VALUES (1, 'birt.work_label', '/opt/jacq-javaee/jacq-birt/hbv_worklabel.rptdesign');

COMMIT;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
